{"version":3,"file":"single-spa.js","sources":["../../src/applications/app.helper.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/load.js","../../src/lifecycles/mount.js","../../src/lifecycles/unmount.js","../../src/start.js","../../src/navigations/reroute.js","../../src/applications/app.js"],"sourcesContent":["// 描述应用的整个状态\nexport const NOT_LOADED = \"NOT_LOADED\"; // 应用初始状态（没有加载过）\nexport const LOADING_SOURCE_CODE = \"LOADING_SOURCE_CODE\"; // 加载资源\nexport const NOT_BOOTSTRAPPED = \"NOT_BOOTSTRAPPED\"; // 启动前\nexport const BOOTSTRAPPING = \"BOOTSTRAPPING\"; // 启动中\nexport const NOT_MOUNTED = \"NOT_MOUNTED\"; // 挂载前\nexport const MOUNTING = \"MOUNTING\"; // 挂载中\nexport const MOUNTED = \"MOUNTED\"; // 挂载完毕\nexport const UPDATING = \"UPDATING\"; // 更新中\nexport const UNMOUNTING = \"UNMOUNTING\"; // 卸载中\nexport const UNLOADING = \"UNLOADING\"; // 没有加载中\nexport const LOAD_ERROR = \"LOAD_ERROR\"; // 加载失败\nexport const SKIP_BECAUSE_BROKEN = \"SKIP_BECAUSE_BROKEN\"; // 运行出错\n\n/**\n * 判断当前应用是否处于激活状态\n * @param {*} app 应用\n * @returns\n */\nexport function isActive(app) {\n  return app.status === MOUNTED;\n}\n\n/**\n * 判断当前应用是否需要被激活（即判断当前是否处于activeWhen）\n * @param {*} app 应用\n */\nexport function shouldBeActive(app) {\n  return app.activeWhen(window.location);\n}\n","import {\n  BOOTSTRAPPING,\n  NOT_BOOTSTRAPPED,\n  NOT_MOUNTED,\n} from \"../applications/app.helper\";\n\n/**\n * 启动应用: 调用应用的bootstrap方法\n * @param {*} app\n */\nexport async function toBootstrapPromise(app) {\n  // 当前不为启动前状态不做处理\n  if (app.status !== NOT_BOOTSTRAPPED) return app;\n\n  // 表示当前状态为启动中\n  app.status = BOOTSTRAPPING;\n\n  // 调用应用的bootstrap方法\n  await app.bootstrap(app.customProps);\n\n  // 表示当前状态为挂载前\n  app.status = NOT_MOUNTED;\n\n  return app;\n}\n","import {\n  LOADING_SOURCE_CODE,\n  NOT_BOOTSTRAPPED,\n} from \"../applications/app.helper\";\n\nfunction flattenFnArray(fns) {\n  // 兼容不是数组形式\n  fns = Array.isArray(fns) ? fns : [fns];\n\n  // props为组合前函数传参\n  // 通过promise链来链式调用Promise.resolve().then(() => fn1(props)).then(() => fn2(props))\n  return (props) =>\n    fns.reduce((p, fn) => p.then(() => fn(props)), Promise.resolve());\n}\n\n/**\n * 加载应用：将bootstrap、mount、unmount方法挂载在应用上\n * @param {*} app 应用\n */\nexport async function toLoadPromise(app) {\n  // 如果还没执行完返回当前执行的\n  if (app.loadPromise) return app.loadPromise;\n\n  return (app.loadPromise = Promise.resolve().then(async () => {\n    // 开始加载，表示状态为加载中\n    app.status = LOADING_SOURCE_CODE;\n\n    // 获取对应的生命周期函数\n    let { bootstrap, mount, unmount } = await app.loadApp(app.customProps);\n\n    // 加载完毕，表示状态为启动前\n    app.status = NOT_BOOTSTRAPPED;\n\n    // 将对应的生命周期方法挂载在应用上\n    app.bootstrap = flattenFnArray(bootstrap);\n    app.mount = flattenFnArray(mount);\n    app.unmount = flattenFnArray(unmount);\n    delete app.loadPromise;\n\n    return app;\n  }));\n}\n","import { NOT_MOUNTED, MOUNTING, MOUNTED } from \"../applications/app.helper\";\n\n/**\n * 挂载应用：调用应用的mount方法\n * @param {*} app\n */\nexport async function toMountPromise(app) {\n  // 如果应用当前状态不为挂载前，则跳过\n  if (app.status !== NOT_MOUNTED) return app;\n\n  // 改变当前状态为挂载中\n  app.status = MOUNTING;\n\n  // 调用应用的mount方法\n  await app.mount(app.customProps);\n\n  // 改变当前状态为已挂载\n  app.status = MOUNTED;\n}\n","import { MOUNTED, NOT_MOUNTED, UNMOUNTING } from \"../applications/app.helper\";\n\n/**\n * 卸载应用：调用应用中的unmount方法\n * @param {*} app 应用\n */\nexport async function toUnmountPromise(app) {\n  // 如果应用没有在挂载，则跳过\n  if (app.status !== MOUNTED) return app;\n\n  // 表示为卸载中状态\n  app.status = UNMOUNTING;\n\n  // 调用应用的unmount方法，进行卸载\n  await app.unmount(app.customProps);\n\n  // 表示为挂载前状态\n  app.status = NOT_MOUNTED;\n\n  // 最后返回应用\n  return app;\n}\n","import { reroute } from \"./navigations/reroute\";\n\nexport let started = false;\nexport function start() {\n  started = true;\n  reroute(); // 加载与挂载应用\n}\n","import { getAppChanges } from \"../applications/app\";\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap\";\nimport { toLoadPromise } from \"../lifecycles/load\";\nimport { toMountPromise } from \"../lifecycles/mount\";\nimport { toUnmountPromise } from \"../lifecycles/unmount\";\nimport { started } from \"../start\";\n\nexport function reroute() {\n  const { appsToLoad, appsToMount, appsToUnmount } = getAppChanges();\n\n  if (started) {\n    // start: 进行应用挂载\n    return preformAppChanges(); // 根据路径来装载应用\n  } else {\n    // register: 进行应用加载\n    return loadApps(); // 预先加载应用\n  }\n\n  /**\n   * 加载应用\n   */\n  async function loadApps() {\n    // 将需要加载的应用，取得其bootstrap、mount、unmount方法放到应用上，完成应用加载\n    let apps = await Promise.all(appsToLoad.map(toLoadPromise));\n  }\n\n  /**\n   * 根据路径来装载应用\n   */\n  async function preformAppChanges() {\n    // 先卸载已激活的应用\n    let unmountPromises = appsToUnmount.map(toUnmountPromise);\n\n    // 将需要加载的应用，进行加载(load)、启动(bootstrap)、挂载(mount)\n    appsToLoad.map(async (app) => {\n      app = await toLoadPromise(app); // 加载(load)\n      app = await toBootstrapPromise(app); // 启动(bootstrap)\n      return toMountPromise(app); // 挂载(mount)\n    });\n\n    // 如果应用已加载，进行启动(bootstrap), 挂载(mount)\n    appsToMount.map(async (app) => {\n      app = await toBootstrapPromise(app);\n      return toMountPromise(app);\n    });\n  }\n}\n","import { reroute } from \"../navigations/reroute\";\nimport {\n  BOOTSTRAPPING,\n  LOADING_SOURCE_CODE,\n  MOUNTED,\n  NOT_BOOTSTRAPPED,\n  NOT_LOADED,\n  NOT_MOUNTED,\n  SKIP_BECAUSE_BROKEN,\n  shouldBeActive,\n} from \"./app.helper\";\n\nconst apps = []; // 用来存放所有应用\n\n/**\n * 注册应用\n * @param {*} appName 应用名称\n * @param {*} loadApp 加载的应用\n * @param {*} activeWhen 当激活时会调用loadApp\n * @param {*} customProps 自定义属性（用于全局通信）\n */\nexport function registerApplication(appName, loadApp, activeWhen, customProps) {\n  apps.push({\n    // 存储应用\n    name: appName,\n    loadApp,\n    activeWhen,\n    customProps,\n    status: NOT_LOADED,\n  });\n\n  reroute(); // 加载应用\n}\n\n/**\n * 根据应用的状态来进行筛选，判断哪些应用是加载还是装载的\n */\nexport function getAppChanges() {\n  const appsToUnmount = []; // 要卸载的应用\n  const appsToLoad = []; // 要加载的应用\n  const appsToMount = []; // 要挂载的应用\n\n  apps.forEach((app) => {\n    // 根据当前hash判断是否被激活\n    const appShouldBeActive =\n      app.status !== SKIP_BECAUSE_BROKEN && shouldBeActive(app);\n    switch (app.status) {\n      case NOT_LOADED:\n      case LOADING_SOURCE_CODE:\n        if (appShouldBeActive) {\n          appsToLoad.push(app);\n        }\n        break;\n      case NOT_BOOTSTRAPPED:\n      case BOOTSTRAPPING:\n      case NOT_MOUNTED:\n        if (appShouldBeActive) {\n          appsToMount.push(app);\n        }\n        break;\n      case MOUNTED:\n        if (!appShouldBeActive) {\n          appsToUnmount.push(app);\n        }\n    }\n  });\n\n  return { appsToLoad, appsToUnmount, appsToMount };\n}\n"],"names":[],"mappings":"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"}